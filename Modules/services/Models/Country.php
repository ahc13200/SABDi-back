<?php
/**Generate by ASGENS
*@author Amanda  
*@date Sun May 14 14:30:00 GMT-04:00 2023  
*@time Sun May 14 14:30:00 GMT-04:00 2023  
*/
namespace Modules\services\Models;


use App\Models\BaseModel;


/**
 * Este es la clase modelo para la tabla public.country.
 *
 * Los siguientes son los campos de la tabla 'public.country':
 * @property integer $id
 * @property string $country_code
 * @property string $country_name

 * Los siguientes son las relaciones de este modelo :

 * @property Payment_transaction[] $array_payment_transaction
 * @property Province[] $array_province
 **/



class Country extends BaseModel 
{
 /**
     * The table associated with the model.
     *
     * @var string
     */
    protected $table = 'public.country';

   /**
     * The connection name for the model.
     *
     * @var string|null
     */
    protected $connection = 'bd';

    /**
     * The primarykey associated with the table-model.
     *
     * @var integer
     */
    protected $primaryKey = 'id';

    /**
     * Indicates if the model should be timestamped.
     *
     * @var bool
     */

    public $timestamps = false;


    /**
     * The "type" of the auto-incrementing ID.
     *
     * @var string
     */
    protected $keyType = 'integer';

    const RELATIONS = ['array_payment_transaction','array_province'];
/**
     * The number of models to return for pagination.
     *
     * @var int
     */
    protected $perPage = 15;

    protected $appends = [];

    /**
     * Model Class Name
     *
     * @var string
     */
    const MODEL = 'Country';
    /**
     * The attributes that are mass assignable.
     *
     * @var array
     */
    protected $fillable = [
      'id',
      'country_code',
      'country_name'
    ];


	 /**
     * 
     * Get array_payment_transaction
     */
	  public function array_payment_transaction()
		{
			return $this->hasMany(Payment_transaction::class,'sender_country_id','id');
		}

	 /**
     * 
     * Get array_province
     */
	  public function array_province()
		{
			return $this->hasMany(Province::class,'country_id','id');
		}


    protected function rules($scenario='create')
    {
          $rules=[
            'create'=>[
                'country_code' =>'required|max:20',
                'country_name' =>'required|max:100'
            ],
            'update'=>[
                'id' =>'required|unique:'.$this->connection.'.public.country,id,'.$this->id.',id',
                'country_code' =>'required|max:20',
                'country_name' =>'required|max:100'
            ]
        ];
        if(!isset($rules[$scenario]))
            throw new \Exception('Scenario '.$scenario.' not exist');
        return $rules[$scenario];
    }

 protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

    }

}

